[
  "double trans = (double) trackBar1.Value / 5000.0;\n", 
  "var ts = new TimeSpan(DateTime.UtcNow.Ticks - dt.Ticks);\ndouble delta = Math.Abs(ts.TotalSeconds);\n\nif (delta < 60)\n{\n  return ts.Seconds == 1 ? \"one second ago\" : ts.Seconds + \" seconds ago\";\n}\nif (delta < 120)\n{\n  return \"a minute ago\";\n}\nif (delta < 2700) // 45 * 60\n{\n  return ts.Minutes + \" minutes ago\";\n}\nif (delta < 5400) // 90 * 60\n{\n  return \"an hour ago\";\n}\nif (delta < 86400) // 24 * 60 * 60\n{\n  return ts.Hours + \" hours ago\";\n}\nif (delta < 172800) // 48 * 60 * 60\n{\n  return \"yesterday\";\n}\nif (delta < 2592000) // 30 * 24 * 60 * 60\n{\n  return ts.Days + \" days ago\";\n}\nif (delta < 31104000) // 12 * 30 * 24 * 60 * 60\n{\n  int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30));\n  return months <= 1 ? \"one month ago\" : months + \" months ago\";\n}\nint years = Convert.ToInt32(Math.Floor((double)ts.Days / 365));\nreturn years <= 1 ? \"one year ago\" : years + \" years ago\";\n", 
  "CREATE TABLE binary_data (\n    id INT(4) NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    description CHAR(50),\n    bin_data LONGBLOB,\n    filename CHAR(50),\n    filesize CHAR(50),\n    filetype CHAR(50)\n);\n", 
  "double AgeDiff(DateTime date1, DateTime date2) {\n    double years = date2.Year - date1.Year;\n\n    /*\n     * If date2 and date1 + round(date2 - date1) are on different sides\n     * of 29 February, then our partial year is considered to have 366\n     * days total, otherwise it's 365. Note that 59 is the day number\n     * of 29 Feb.\n     */\n    double fraction = 365\n            + (DateTime.IsLeapYear(date2.Year) && date2.DayOfYear >= 59\n            && (date1.DayOfYear < 59 || date1.DayOfYear > date2.DayOfYear)\n            ? 1 : 0);\n\n    /*\n     * The only really nontrivial case is if date1 is in a leap year,\n     * and date2 is not. So let's handle the others first.\n     */\n    if (DateTime.IsLeapYear(date2.Year) == DateTime.IsLeapYear(date1.Year))\n        return years + (date2.DayOfYear - date1.DayOfYear) / fraction;\n\n    /*\n     * If date2 is in a leap year, but date1 is not and is March or\n     * beyond, shift up by a day.\n     */\n    if (DateTime.IsLeapYear(date2.Year)) {\n        return years + (date2.DayOfYear - date1.DayOfYear\n                - (date1.DayOfYear >= 59 ? 1 : 0)) / fraction;\n    }\n\n    /*\n     * If date1 is not on 29 February, shift down date1 by a day if\n     * March or later. Proceed normally.\n     */\n    if (date1.DayOfYear != 59) {\n        return years + (date2.DayOfYear - date1.DayOfYear\n                + (date1.DayOfYear > 59 ? 1 : 0)) / fraction;\n    }\n\n    /*\n     * Okay, here date1 is on 29 February, and date2 is not on a leap\n     * year. What to do now? On 28 Feb in date2's year, the ``age''\n     * should be just shy of a whole number, and on 1 Mar should be\n     * just over. Perhaps the easiest way is to a point halfway\n     * between those two: 58.5.\n     */\n    return years + (date2.DayOfYear - 58.5) / fraction;\n}\n", 
  "DateTime birthDate = new DateTime(2000,3,1);\nint age = (int)Math.Floor((DateTime.Now - birthDate).TotalDays / 365.25D);\n", 
  "BLOB", 
  "public static string ToLongString(this TimeSpan time)\n{\n    string output = String.Empty;\n\n    if (time.Days > 0)\n        output += time.Days + \" days \";\n\n    if ((time.Days == 0 || time.Days == 1) && time.Hours > 0)\n        output += time.Hours + \" hr \";\n\n    if (time.Days == 0 && time.Minutes > 0)\n        output += time.Minutes + \" min \";\n\n    if (output.Length == 0)\n        output += time.Seconds + \" sec\";\n\n    return output.Trim();\n}\n", 
  "#include <sys/socket.h>\n\nint\nmain()\n{\n    return AF_INET;\n}\n", 
  "div", 
  "Math.Floor", 
  "Reset()", 
  "Console.ReadLine()", 
  "private var gcCount:int;\nprivate function startGCCycle():void{\n    gcCount = 0;\n    addEventListener(Event.ENTER_FRAME, doGC);\n}\nprivate function doGC(evt:Event):void{\n    flash.system.System.gc();\n    if(++gcCount > 1){\n        removeEventListener(Event.ENTER_FRAME, doGC);\n        setTimeout(lastGC, 40);\n    }\n}\nprivate function lastGC():void{\n    flash.system.System.gc();\n}\n", 
  "byteArray", 
  "<input type=\"submit\" name=\"submitButton\" value=\"Previous Page\" />\n<input type=\"submit\" name=\"submitButton\" value=\"Next Page\" />\n", 
  "<input type=\"button\" name=\"prev\" value=\"Previous Page\" />\n", 
  "ByteArray", 
  "var names = (from DataRow dr in dataTable.Rows\n             select (string)dr[\"Name\"]).Distinct().OrderBy( name => name );\n", 
  ".docm", 
  "Skip", 
  "extern \"C\"", 
  "<?php\n\n/** Plugin system **/\n\n$listeners = array();\n\n/* Create an entry point for plugins */\nfunction hook() {\n    global $listeners;\n\n    $num_args = func_num_args();\n    $args = func_get_args();\n\n    if($num_args < 2)\n        trigger_error(\"Insufficient arguments\", E_USER_ERROR);\n\n    // Hook name should always be first argument\n    $hook_name = array_shift($args);\n\n    if(!isset($listeners[$hook_name]))\n        return; // No plugins have registered this hook\n\n    foreach($listeners[$hook_name] as $func) {\n        $args = $func($args); \n    }\n    return $args;\n}\n\n/* Attach a function to a hook */\nfunction add_listener($hook, $function_name) {\n    global $listeners;\n    $listeners[$hook][] = $function_name;\n}\n\n/////////////////////////\n\n/** Sample Plugin **/\nadd_listener('a_b', 'my_plugin_func1');\nadd_listener('str', 'my_plugin_func2');\n\nfunction my_plugin_func1($args) {\n    return array(4, 5);\n}\n\nfunction my_plugin_func2($args) {\n    return str_replace('sample', 'CRAZY', $args[0]);\n}\n\n/////////////////////////\n\n/** Sample Application **/\n\n$a = 1;\n$b = 2;\n\nlist($a, $b) = hook('a_b', $a, $b);\n\n$str  = \"This is my sample application\\n\";\n$str .= \"$a + $b = \".($a+$b).\"\\n\";\n$str .= \"$a * $b = \".($a*$b).\"\\n\";\n\n$str = hook('str', $str);\necho $str;\n?>\n", 
  "this.Opacity", 
  "System.totalMemory", 
  "select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'ABC'\n", 
  "IEnumerable", 
  "./content/YYYYMMDDHHMMSS/\n", 
  "gettimeofday()", 
  "serialize()", 
  "XMLHttpRequest", 
  "var strSql:String = stream.readUTFBytes(stream.bytesAvailable);      \nvar i:Number = 0;\nvar strSqlSplit:Array = strSql.split(\";\");\nfor (i = 0; i < strSqlSplit.length; i++){\n    NonQuery(strSqlSplit[i].toString());\n}\n", 
  "String.split()", 
  "public function getName() {\n    $this->incrementNameCalled();\n    return $this->_getName();\n}\n\nprotected function _getName() {\n    return $this->name;\n}\n", 
  "$filename = base64_url_decode($_REQUEST['file']);\nheader(\"Cache-Control: public\");\nheader('Content-disposition: attachment; filename='.basename($filename));\nheader(\"Content-Transfer-Encoding: binary\");\nheader('Content-Length: '. filesize($filename));\n\n//  Put either file counting code here. either a db or static files\n\n//\n\nreadfile($filename);  //and spit the user the file\n\n\nfunction base64_url_decode($input) {\n    return base64_decode(strtr($input, '-_,', '+/='));\n}\n", 
  "$user = array(\"name\" => \"dubayou\", \n              \"age\" => 20,\n              \"websites\" => array(\"dubayou.com\",\"willwharton.com\",\"codecream.com\"),\n              \"and_one\" => \"more\");\n"
]